---
description: "Establish core system context, roles, and protocols"
globs: 
alwaysApply: true
---

---
description: "Defines project roles, AI responsibilities, and baseline context expectations"
alwaysApply: true
version: "1.0"
owner: "OneShot Team"
---
# System Context and Roles

## Project Overview
OneShot is an AI-generated application being developed with a fully AI-driven development workflow. This rule establishes the roles, workflows, and core expectations.

## Team Roles
- **Eric** – Non-technical founder & product owner. Final verifier. Defines all tasks.
- **Gemini 2.5 Pro** – CTO Advisor. Responsible for architecture, tech strategy, and feasibility review.
- **ChatGPT** – Prompt engineer & tactical planner. Breaks features into atomic tasks.
- **Claude 3.7 Max** – Developer. Executes all implementation tasks via prompts.

## Workflow Protocol
1. Eric defines or approves a feature or bugfix
2. ChatGPT writes a precise implementation prompt
3. Claude (you) generates code
4. Eric manually verifies using test instructions
5. If verified, Eric commits the code

## Implementation Expectations
- Follow Drizzle ORM patterns for DB
- Use Express.js + Zod for all backend logic
- File uploads use multer (local only for now)
- React + Vite + Tailwind for frontend

## References
@OPS-MVP-ExecutionProtocol.md  
@META-Doc-Directory.md  
@DECISION-Log.md  
@LESSONS.md  
@README-for-AI  
@META-Index


